// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    //參考:https://nand2tetris-hdl.github.io/
    DMux8Way(in=load, sel=address[0..2], a=R0, b=R1, c=R2, d=R3, e=R4, f=R5, g=R6, h=R7);
    RAM512(in=in, load=R0, address=address[3..11], out=R0out);
    RAM512(in=in, load=R1, address=address[3..11], out=R1out);
    RAM512(in=in, load=R2, address=address[3..11], out=R2out);
    RAM512(in=in, load=R3, address=address[3..11], out=R3out);
    RAM512(in=in, load=R4, address=address[3..11], out=R4out);
    RAM512(in=in, load=R5, address=address[3..11], out=R5out);
    RAM512(in=in, load=R6, address=address[3..11], out=R6out);
    RAM512(in=in, load=R7, address=address[3..11], out=R7out);
    Mux8Way16(a=R0out, b=R1out, c=R2out, d=R3out, e=R4out, f=R5out, g=R6out, h=R7out, sel=address[0..2], out=out);
}